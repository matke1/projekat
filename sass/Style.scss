$backgorund: lightgreen;
$color: white;
$base-px-default: 16px !default;
$opacity: 0.5;
$font-family: helvetic, sans-sefir;





// Breakpoints

@function strip-units($value){
  @return $value / ($value * 0+1);
}


@function em-calc($px, $base-val: $base-px-default){
  @if not unitless($px){
    $px: strip-units($px);
  }
  @if not unitless($base-val){
    $base-val: strip-units($base-val);
  }
  @return ($px / $base-val) * 1em;
}



$onepx: em-calc(1) !default;
$hdpi-ratio-default: 1.3 !default;
$breakpoint-xlarge-default: em-calc(1920) !default;
$breakpoint-large-default: em-calc(1440) !default;
$breakpoint-medium-default: em-calc(1024) !default;
$breakpoint-small-default: em-calc(640) !default;
$breakpoint-xsmall-default: em-calc(480) !default;
$breakpoint-xxsmall-default: em-calc(320) !default;
// Show/Hide
$show-display-default: block !default;
// Border Radius
$border-radius-default: 5px !default;
// Placeholder Color
$placeholder-color-default: #555555 !default;
// Triangle
$triangle-direction-default: right !default;
$triangle-size-default: $base-px-default !default;
$triangle-color-default: #222222 !default;
$triangle-element-default: after !default;
// Circle
$circle-size-default: $base-px-default !default;
$circle-color-default: inherit !default;
$circle-border-width-default: null !default;
$circle-border-color-default: #222222 !default;
$circle-display-default: inline-block !default;
// Square
$square-size-default: $base-px-default !default;
$square-color-default: black !default;
$square-border-width-default: null !default;
$square-border-color-default: grey !default;
$square-element-default: before !default;
// Position
$position-default: null !default;
// Tint/Shade
$mix-percent-default: 15% !default;



///// BREAK POINT PLACEHOLDERS////
$breakpoints: (
        "xxlarge":	"(min-width: #{$breakpoint-xlarge-default + $onepx})",
        "xlarge-only":	"(min-width: #{$breakpoint-large-default + $onepx}) and (max-width: #{$breakpoint-xlarge-default})",
        "xlarge-up":	"(min-width: #{$breakpoint-large-default + $onepx})",
        "xlarge":	"(max-width: #{$breakpoint-xlarge-default})",
        "large-only":	"(min-width: #{$breakpoint-medium-default + $onepx}) and (max-width: #{$breakpoint-large-default})",
        "large-up":	"(min-width: #{$breakpoint-medium-default + $onepx})",
        "large":	"(max-width: #{$breakpoint-large-default})",
        "medium-only":	"(min-width: #{$breakpoint-small-default + $onepx}) and (max-width: #{$breakpoint-medium-default})",
        "medium-up":	"(min-width: #{$breakpoint-small-default + $onepx})",
        "medium":	"(max-width: #{$breakpoint-medium-default})",
        "small-only":	"(min-width: #{$breakpoint-xsmall-default + $onepx}) and (max-width: #{$breakpoint-small-default})",
        "small-up":	"(min-width: #{$breakpoint-xsmall-default + $onepx})",
        "small":	"(max-width: #{$breakpoint-small-default})",
        "xsmall-only":	"(min-width: #{$breakpoint-xxsmall-default + $onepx}) and (max-width: #{$breakpoint-xsmall-default})",
        "xsmall-up":	"(min-width: #{$breakpoint-xxsmall-default + $onepx})",
        "xsmall":	"(max-width: #{$breakpoint-xsmall-default})",
        "xxsmall":	"(max-width: #{$breakpoint-xxsmall-default})",
);


///// BREAKPOINT ////////////////////////////

@mixin bp($break, $viewport1:null){

  @if not $viewport1 {

    @if map-has-key($breakpoints, $break){

      @media only screen and #{map-get($breakpoints, $break)} { @content; }
    }
    @else {
      @warn "Couldent find a breakpoint named #{$break}.";
    }

  }
  @else {
    @if $break == min {
      @media screen and (min-width: $viewport1) {@content;}
    }
    @else if $break == max {
      @media screen and (max-width: $viewport1){@content;}
    }
    @else {
      @media screen and (min-width: $break) and (max-width: $viewport1){@content;}
    }
  }
}




body{

  header{
    border:2px solid black;
    background-color: black;
    h1{
      color: $color;
      font-family: $font-family;
    }
    h2{
      color: $color;
      font-family: $font-family;
    }

  }

  .grad{
    background: $backgorund;

    .intro%pasusi{
      border:1px solid black;
      margin:0 auto;
      background: black;
      opacity: $opacity;
      color: $color;
      padding:10px;
    }

    .feature{

      @extend %pasusi;

    }
  }





  @include bp(small){

    background-color: $backgorund;
    header{
      background-color: black;
      opacity: $opacity;
      padding: 10px;
      h1{
        color: $color;
        font-family: $font-family;
      }
      h2{
        color: $color;
        font-family: $font-family;
      }
    }


  }

}

